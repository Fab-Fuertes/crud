{"ast":null,"code":"/*\n * css-buttons\n * https://github.com/upstage/css-buttons\n * Copyright (c) 2013\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function (grunt) {\n  grunt.util._.mixin(require('./src/helpers/mixins.js').init(grunt));\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    assemble: {\n      docs: {\n        options: {\n          flatten: true,\n          assets: 'assets',\n          helpers: ['./src/helpers/helpers.js'],\n          layout: 'src/templates/layouts/default.hbs',\n          partials: ['src/templates/partials/**/*.hbs'],\n          data: ['src/data/*.{json,yml}'],\n          // Pass metadata from package.json into templates\n          pkg: '<%= pkg %>'\n        },\n        src: ['src/templates/pages/*.hbs'],\n        dest: './'\n      }\n    },\n    less: {\n      options: {\n        paths: ['src/less', 'src/less/components'],\n        imports: {\n          reference: ['src/less/variables.less', 'src/less/mixins.less']\n        }\n      },\n      component: {\n        src: 'src/less/components/*.less',\n        dest: 'assets/components.css'\n      }\n    },\n    prettify: {\n      options: {\n        prettifyrc: '.prettifyrc'\n      },\n      docs: {\n        files: [{\n          expand: true,\n          cwd: './',\n          ext: '.html',\n          src: ['*.html'],\n          dest: './'\n        }]\n      }\n    },\n    // Before generating any new files,\n    // remove any previously-created files.\n    clean: {\n      example: ['*.html']\n    }\n  });\n\n  // Load npm plugins to provide necessary tasks.\n  grunt.loadNpmTasks('assemble');\n  grunt.loadNpmTasks('assemble-less');\n  grunt.loadNpmTasks('grunt-prettify');\n  grunt.loadNpmTasks('grunt-contrib-clean');\n\n  // Default tasks to be run.\n  grunt.registerTask('default', ['clean', 'less', 'assemble', 'prettify']);\n};","map":{"version":3,"names":["module","exports","grunt","util","_","mixin","require","init","initConfig","pkg","file","readJSON","assemble","docs","options","flatten","assets","helpers","layout","partials","data","src","dest","less","paths","imports","reference","component","prettify","prettifyrc","files","expand","cwd","ext","clean","example","loadNpmTasks","registerTask"],"sources":["C:/Users/fabys/Desktop/microproyecto2/node_modules/components/Gruntfile.js"],"sourcesContent":["/*\n * css-buttons\n * https://github.com/upstage/css-buttons\n * Copyright (c) 2013\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function(grunt) {\n  grunt.util._.mixin(require('./src/helpers/mixins.js').init(grunt));\n\n  // Project configuration.\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n\n    assemble: {\n      docs: {\n        options: {\n          flatten: true,\n          assets: 'assets',\n          helpers: ['./src/helpers/helpers.js'],\n          layout: 'src/templates/layouts/default.hbs',\n          partials: ['src/templates/partials/**/*.hbs'],\n          data: ['src/data/*.{json,yml}'],\n\n          // Pass metadata from package.json into templates\n          pkg: '<%= pkg %>'\n        },\n        src: ['src/templates/pages/*.hbs'],\n        dest: './'\n      }\n    },\n\n    less: {\n      options: {\n        paths: ['src/less', 'src/less/components'],\n        imports: {\n          reference: ['src/less/variables.less', 'src/less/mixins.less']\n        }\n      },\n      component: {\n        src:  'src/less/components/*.less',\n        dest: 'assets/components.css'\n      }\n    },\n\n    prettify: {\n      options: {\n        prettifyrc: '.prettifyrc'\n      },\n      docs: {\n        files: [\n          {expand: true, cwd: './', ext: '.html', src: ['*.html'], dest: './'}\n        ]\n      }\n    },\n\n    // Before generating any new files,\n    // remove any previously-created files.\n    clean: {\n      example: ['*.html']\n    }\n  });\n\n  // Load npm plugins to provide necessary tasks.\n  grunt.loadNpmTasks('assemble');\n  grunt.loadNpmTasks('assemble-less');\n  grunt.loadNpmTasks('grunt-prettify');\n  grunt.loadNpmTasks('grunt-contrib-clean');\n\n  // Default tasks to be run.\n  grunt.registerTask('default', ['clean', 'less', 'assemble', 'prettify']);\n};\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,UAASC,KAAK,EAAE;EAC/BA,KAAK,CAACC,IAAI,CAACC,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC;;EAElE;EACAA,KAAK,CAACM,UAAU,CAAC;IACfC,GAAG,EAAEP,KAAK,CAACQ,IAAI,CAACC,QAAQ,CAAC,cAAc,CAAC;IAExCC,QAAQ,EAAE;MACRC,IAAI,EAAE;QACJC,OAAO,EAAE;UACPC,OAAO,EAAE,IAAI;UACbC,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE,CAAC,0BAA0B,CAAC;UACrCC,MAAM,EAAE,mCAAmC;UAC3CC,QAAQ,EAAE,CAAC,iCAAiC,CAAC;UAC7CC,IAAI,EAAE,CAAC,uBAAuB,CAAC;UAE/B;UACAX,GAAG,EAAE;QACP,CAAC;QACDY,GAAG,EAAE,CAAC,2BAA2B,CAAC;QAClCC,IAAI,EAAE;MACR;IACF,CAAC;IAEDC,IAAI,EAAE;MACJT,OAAO,EAAE;QACPU,KAAK,EAAE,CAAC,UAAU,EAAE,qBAAqB,CAAC;QAC1CC,OAAO,EAAE;UACPC,SAAS,EAAE,CAAC,yBAAyB,EAAE,sBAAsB;QAC/D;MACF,CAAC;MACDC,SAAS,EAAE;QACTN,GAAG,EAAG,4BAA4B;QAClCC,IAAI,EAAE;MACR;IACF,CAAC;IAEDM,QAAQ,EAAE;MACRd,OAAO,EAAE;QACPe,UAAU,EAAE;MACd,CAAC;MACDhB,IAAI,EAAE;QACJiB,KAAK,EAAE,CACL;UAACC,MAAM,EAAE,IAAI;UAAEC,GAAG,EAAE,IAAI;UAAEC,GAAG,EAAE,OAAO;UAAEZ,GAAG,EAAE,CAAC,QAAQ,CAAC;UAAEC,IAAI,EAAE;QAAI,CAAC;MAExE;IACF,CAAC;IAED;IACA;IACAY,KAAK,EAAE;MACLC,OAAO,EAAE,CAAC,QAAQ;IACpB;EACF,CAAC,CAAC;;EAEF;EACAjC,KAAK,CAACkC,YAAY,CAAC,UAAU,CAAC;EAC9BlC,KAAK,CAACkC,YAAY,CAAC,eAAe,CAAC;EACnClC,KAAK,CAACkC,YAAY,CAAC,gBAAgB,CAAC;EACpClC,KAAK,CAACkC,YAAY,CAAC,qBAAqB,CAAC;;EAEzC;EACAlC,KAAK,CAACmC,YAAY,CAAC,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}